<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.grading.system.mapper.GradingTemplateMapper">
    
    <resultMap type="GradingTemplate" id="GradingTemplateResult">
        <result property="id"    column="id"    />
        <result property="type"    column="type"    />
        <result property="typeName"    column="type_name"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createUser"    column="create_user"    />
        <result property="updateUser"    column="update_user"    />
    </resultMap>

    <sql id="selectGradingTemplateVo">
        select id, type, type_name, create_time, update_time, create_user, update_user from grading_template
    </sql>

    <select id="selectGradingTemplateList" parameterType="GradingTemplate" resultMap="GradingTemplateResult">
        <include refid="selectGradingTemplateVo"/>
        <where>  
            <if test="type != null "> and type = #{type}</if>
            <if test="typeName != null  and typeName != ''"> and type_name like concat('%', #{typeName}, '%')</if>
            <if test="createUser != null "> and create_user = #{createUser}</if>
            <if test="updateUser != null "> and update_user = #{updateUser}</if>
        </where>
    </select>
    
    <select id="selectGradingTemplateById" parameterType="Long" resultMap="GradingTemplateResult">
        <include refid="selectGradingTemplateVo"/>
        where id = #{id}
    </select>

    <insert id="insertGradingTemplate" parameterType="GradingTemplate" useGeneratedKeys="true" keyProperty="id">
        insert into grading_template
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="type != null">type,</if>
            <if test="typeName != null and typeName != ''">type_name,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createUser != null">create_user,</if>
            <if test="updateUser != null">update_user,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="type != null">#{type},</if>
            <if test="typeName != null and typeName != ''">#{typeName},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createUser != null">#{createUser},</if>
            <if test="updateUser != null">#{updateUser},</if>
         </trim>
    </insert>

    <update id="updateGradingTemplate" parameterType="GradingTemplate">
        update grading_template
        <trim prefix="SET" suffixOverrides=",">
            <if test="type != null">type = #{type},</if>
            <if test="typeName != null and typeName != ''">type_name = #{typeName},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="createUser != null">create_user = #{createUser},</if>
            <if test="updateUser != null">update_user = #{updateUser},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteGradingTemplateById" parameterType="Long">
        delete from grading_template where id = #{id}
    </delete>

    <delete id="deleteGradingTemplateByIds" parameterType="String">
        delete from grading_template where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>